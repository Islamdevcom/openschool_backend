#!/usr/bin/env python3
"""
–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã register_requests.
- –°–æ–∑–¥–∞—ë—Ç —Ç–∞–±–ª–∏—Ü—É –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
- –î–µ–ª–∞–µ—Ç school_id nullable –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
"""
import os
import sys
from sqlalchemy import create_engine, text

def migrate_register_requests():
    """–°–æ–∑–¥–∞—ë—Ç –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ç–∞–±–ª–∏—Ü—É register_requests"""
    database_url = os.getenv("DATABASE_URL")

    if not database_url:
        print("‚ö†Ô∏è  DATABASE_URL not set, skipping migration")
        return

    try:
        engine = create_engine(database_url)

        with engine.connect() as conn:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
            result = conn.execute(text("""
                SELECT EXISTS (
                    SELECT FROM information_schema.tables
                    WHERE table_name = 'register_requests'
                );
            """))
            table_exists = result.scalar()

            if not table_exists:
                # –¢–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - —Å–æ–∑–¥–∞—ë–º —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
                print("üìù Creating register_requests table...")
                conn.execute(text("""
                    CREATE TABLE register_requests (
                        id SERIAL PRIMARY KEY,
                        full_name VARCHAR NOT NULL,
                        email VARCHAR UNIQUE NOT NULL,
                        password VARCHAR NOT NULL,
                        role VARCHAR NOT NULL,
                        status VARCHAR DEFAULT 'pending',
                        school_id INTEGER REFERENCES schools(id) NULL
                    );
                """))
                conn.commit()
                print("‚úÖ Successfully created register_requests table with nullable school_id")
                return

            # –¢–∞–±–ª–∏—Ü–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - –ø—Ä–æ–≤–µ—Ä—è–µ–º nullable —Å—Ç–∞—Ç—É—Å school_id
            result = conn.execute(text("""
                SELECT is_nullable
                FROM information_schema.columns
                WHERE table_name = 'register_requests'
                AND column_name = 'school_id';
            """))
            is_nullable = result.scalar()

            if is_nullable == 'NO':
                # –î–µ–ª–∞–µ–º school_id nullable
                print("üìù Making school_id nullable...")
                conn.execute(text("""
                    ALTER TABLE register_requests
                    ALTER COLUMN school_id DROP NOT NULL;
                """))
                conn.commit()
                print("‚úÖ Successfully made school_id nullable in register_requests")
            else:
                print("‚ÑπÔ∏è  register_requests table already exists with nullable school_id")

    except Exception as e:
        print(f"‚ùå Migration failed: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)

if __name__ == "__main__":
    migrate_register_requests()

